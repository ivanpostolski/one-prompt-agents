name: Build and Release

on:
  push:
    # Trigger the workflow when a new version tag (e.g., v1.2.3) is pushed
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # required to create a GitHub Release
  id-token: write  # required for trusted publishing to PyPI if enabled

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - uses: actions/checkout@v4

      # Set up the desired Python version (adjust if your project targets a different version)
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Install build tool
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      # Build wheel and sdist
      - name: Build package
        run: python -m build --sdist --wheel --outdir dist

      # Upload built distributions as workflow artifacts (for easy download/debugging)
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist/

      # Publish the package to PyPI (requires PYPI_API_TOKEN secret)
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: success()
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          # Comment out the following line to publish to production PyPI instead of TestPyPI
          # repository_url: https://test.pypi.org/legacy/

      # Create a GitHub Release and attach the distributions as assets
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false 